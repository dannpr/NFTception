{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar varint = require('varint');\n\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\n\nvar varint__default = /*#__PURE__*/_interopDefaultLegacy(varint);\n\nfunction createHeader(roots) {\n  const headerBytes = dagCbor.encode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint__default['default'].encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\n\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n\n    async writeBlock(block) {\n      const {\n        cid,\n        bytes\n      } = block;\n      await writer.write(new Uint8Array(varint__default['default'].encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      await writer.write(bytes);\n    },\n\n    async close() {\n      return writer.end();\n    }\n\n  };\n}\n\nexports.createEncoder = createEncoder;\nexports.createHeader = createHeader;","map":{"version":3,"sources":["/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/node_modules/@ipld/car/cjs/lib/encoder.js"],"names":["Object","defineProperty","exports","value","varint","require","dagCbor","_interopDefaultLegacy","e","varint__default","createHeader","roots","headerBytes","encode","version","varintBytes","length","header","Uint8Array","set","createEncoder","writer","setRoots","bytes","write","writeBlock","block","cid","close","end"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AAEA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,gBAAD,CAArB;;AAEA,SAASE,qBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAOA,CAAC,IAAI,OAAOA,CAAP,KAAa,QAAlB,IAA8B,aAAaA,CAA3C,GAA+CA,CAA/C,GAAmD;AAAE,eAAWA;AAAb,GAA1D;AAA6E;;AAElH,IAAIC,eAAe,GAAG,aAAaF,qBAAqB,CAACH,MAAD,CAAxD;;AAEA,SAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAMC,WAAW,GAAGN,OAAO,CAACO,MAAR,CAAe;AACjCC,IAAAA,OAAO,EAAE,CADwB;AAEjCH,IAAAA;AAFiC,GAAf,CAApB;AAIA,QAAMI,WAAW,GAAGN,eAAe,CAAC,SAAD,CAAf,CAA2BI,MAA3B,CAAkCD,WAAW,CAACI,MAA9C,CAApB;AACA,QAAMC,MAAM,GAAG,IAAIC,UAAJ,CAAeH,WAAW,CAACC,MAAZ,GAAqBJ,WAAW,CAACI,MAAhD,CAAf;AACAC,EAAAA,MAAM,CAACE,GAAP,CAAWJ,WAAX,EAAwB,CAAxB;AACAE,EAAAA,MAAM,CAACE,GAAP,CAAWP,WAAX,EAAwBG,WAAW,CAACC,MAApC;AACA,SAAOC,MAAP;AACD;;AACD,SAASG,aAAT,CAAuBC,MAAvB,EAA+B;AAC7B,SAAO;AACL,UAAMC,QAAN,CAAeX,KAAf,EAAsB;AACpB,YAAMY,KAAK,GAAGb,YAAY,CAACC,KAAD,CAA1B;AACA,YAAMU,MAAM,CAACG,KAAP,CAAaD,KAAb,CAAN;AACD,KAJI;;AAKL,UAAME,UAAN,CAAiBC,KAAjB,EAAwB;AACtB,YAAM;AAACC,QAAAA,GAAD;AAAMJ,QAAAA;AAAN,UAAeG,KAArB;AACA,YAAML,MAAM,CAACG,KAAP,CAAa,IAAIN,UAAJ,CAAeT,eAAe,CAAC,SAAD,CAAf,CAA2BI,MAA3B,CAAkCc,GAAG,CAACJ,KAAJ,CAAUP,MAAV,GAAmBO,KAAK,CAACP,MAA3D,CAAf,CAAb,CAAN;AACA,YAAMK,MAAM,CAACG,KAAP,CAAaG,GAAG,CAACJ,KAAjB,CAAN;AACA,YAAMF,MAAM,CAACG,KAAP,CAAaD,KAAb,CAAN;AACD,KAVI;;AAWL,UAAMK,KAAN,GAAc;AACZ,aAAOP,MAAM,CAACQ,GAAP,EAAP;AACD;;AAbI,GAAP;AAeD;;AAED3B,OAAO,CAACkB,aAAR,GAAwBA,aAAxB;AACAlB,OAAO,CAACQ,YAAR,GAAuBA,YAAvB","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('varint');\nvar dagCbor = require('@ipld/dag-cbor');\n\nfunction _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }\n\nvar varint__default = /*#__PURE__*/_interopDefaultLegacy(varint);\n\nfunction createHeader(roots) {\n  const headerBytes = dagCbor.encode({\n    version: 1,\n    roots\n  });\n  const varintBytes = varint__default['default'].encode(headerBytes.length);\n  const header = new Uint8Array(varintBytes.length + headerBytes.length);\n  header.set(varintBytes, 0);\n  header.set(headerBytes, varintBytes.length);\n  return header;\n}\nfunction createEncoder(writer) {\n  return {\n    async setRoots(roots) {\n      const bytes = createHeader(roots);\n      await writer.write(bytes);\n    },\n    async writeBlock(block) {\n      const {cid, bytes} = block;\n      await writer.write(new Uint8Array(varint__default['default'].encode(cid.bytes.length + bytes.length)));\n      await writer.write(cid.bytes);\n      await writer.write(bytes);\n    },\n    async close() {\n      return writer.end();\n    }\n  };\n}\n\nexports.createEncoder = createEncoder;\nexports.createHeader = createHeader;\n"]},"metadata":{},"sourceType":"script"}