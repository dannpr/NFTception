{"ast":null,"code":"var _jsxFileName = \"/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/Component/LendingPopup.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport BlockchainContext from \"../context/BlockchainContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LendingPopup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmission = e => {\n      this.setState({\n        amountToLend: e.target.value\n      });\n      console.log(this.state.amountToLend);\n      this.props.handleLend(this.state.amountToLend);\n    };\n\n    this.state = {\n      contract: null,\n      nft: null\n    };\n    this.handleSubmission = this.handleSubmission.bind(this);\n    this.handleLendingAmount = this.handleLendingAmount.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      contract: this.context.instance\n    });\n    this.setState({\n      accounts: await this.context.accountsPromise\n    });\n  }\n\n  handleLendingAmount(e) {\n    this.setState({\n      amountToLend: e.target.value\n    });\n  }\n\n  async displayNFT(nftContract, tokenId, planetId) {\n    const addedNFT = await this.state.contract.methods.addNFT(nftContract, tokenId, planetId).send({\n      from: this.state.accounts[0],\n      value: 0.002 * 10 ** 18\n    }).then(res => {\n      console.log(res.events.Transfer.returnValues.tokenId);\n      const IDPlanet = res.events.Transfer.returnValues.tokenId;\n      console.log('Success', res);\n      alert('You have successfully created a new NFT! ID : ' + IDPlanet);\n      let radius = this.getRandomLogInt(5, 5);\n      this.createSphere(radius, IDPlanet);\n      return IDPlanet;\n    }).catch(err => console.log(err));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup\",\n      style: {\n        position: 'absolute',\n        top: 0,\n        margin: 'auto',\n        right: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup_inner\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Dialog, {\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: [\"You are on the planet \", this.props.planetID, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: \"Add NFT to your planet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"formName\",\n              onChange: this.changeName,\n              placeholder: \"NFT Contract\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              type: \"text\",\n              id: \"formName\",\n              onChange: this.changeName,\n              placeholder: \"Token ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              style: {\n                margin: \"10px\"\n              },\n              onClick: this.handleSubmission,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              style: {\n                margin: \"10px\"\n              },\n              onClick: this.props.closePopup,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n              children: this.state.nft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nLendingPopup.contextType = BlockchainContext;\nexport default LendingPopup;","map":{"version":3,"sources":["/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/Component/LendingPopup.js"],"names":["axios","React","Component","Button","Form","Modal","BlockchainContext","LendingPopup","constructor","props","handleSubmission","e","setState","amountToLend","target","value","console","log","state","handleLend","contract","nft","bind","handleLendingAmount","componentDidMount","context","instance","accounts","accountsPromise","displayNFT","nftContract","tokenId","planetId","addedNFT","methods","addNFT","send","from","then","res","events","Transfer","returnValues","IDPlanet","alert","radius","getRandomLogInt","createSphere","catch","err","render","position","top","margin","right","planetID","changeName","closePopup","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;;;AAEA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEjCM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,gBAnBmB,GAmBEC,CAAD,IAAO;AACvB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWL,YAAvB;AACA,WAAKJ,KAAL,CAAWU,UAAX,CAAsB,KAAKD,KAAL,CAAWL,YAAjC;AACH,KAvBkB;;AAGf,SAAKK,KAAL,GAAa;AACTE,MAAAA,QAAQ,EAAE,IADD;AAETC,MAAAA,GAAG,EAAE;AAFI,KAAb;AAKA,SAAKX,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBY,IAAtB,CAA2B,IAA3B,CAAtB;AACA,SAAKC,mBAAL,GAAyB,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAAzB;AACH;;AAEsB,QAAjBE,iBAAiB,GAAK;AACxB,SAAKZ,QAAL,CAAc;AAAEQ,MAAAA,QAAQ,EAAE,KAAKK,OAAL,CAAaC;AAAzB,KAAd;AACA,SAAKd,QAAL,CAAc;AAAEe,MAAAA,QAAQ,EAAE,MAAM,KAAKF,OAAL,CAAaG;AAA/B,KAAd;AAGH;;AAODL,EAAAA,mBAAmB,CAACZ,CAAD,EAAI;AACnB,SAAKC,QAAL,CAAc;AAACC,MAAAA,YAAY,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAxB,KAAd;AACH;;AAEe,QAAVc,UAAU,CAACC,WAAD,EAAcC,OAAd,EAAuBC,QAAvB,EAAiC;AAC7C,UAAMC,QAAQ,GAAG,MAAM,KAAKf,KAAL,CAAWE,QAAX,CAAoBc,OAApB,CAA4BC,MAA5B,CAAmCL,WAAnC,EAAgDC,OAAhD,EAAyDC,QAAzD,EACxBI,IADwB,CACnB;AAAEC,MAAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWS,QAAX,CAAoB,CAApB,CAAR;AAAgCZ,MAAAA,KAAK,EAAE,QAAQ,MAAM;AAArD,KADmB,EAExBuB,IAFwB,CAEnBC,GAAG,IAAI;AACXvB,MAAAA,OAAO,CAACC,GAAR,CAAYsB,GAAG,CAACC,MAAJ,CAAWC,QAAX,CAAoBC,YAApB,CAAiCX,OAA7C;AACA,YAAMY,QAAQ,GAAGJ,GAAG,CAACC,MAAJ,CAAWC,QAAX,CAAoBC,YAApB,CAAiCX,OAAlD;AACAf,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBsB,GAAvB;AACAK,MAAAA,KAAK,CAAC,mDAAmDD,QAApD,CAAL;AAEA,UAAIE,MAAM,GAAG,KAAKC,eAAL,CAAqB,CAArB,EAAwB,CAAxB,CAAb;AACA,WAAKC,YAAL,CAAkBF,MAAlB,EAA0BF,QAA1B;AAEA,aAAOA,QAAP;AACD,KAZwB,EAaxBK,KAbwB,CAalBC,GAAG,IAAIjC,OAAO,CAACC,GAAR,CAAYgC,GAAZ,CAbW,CAAvB;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,KAAK,EAAE;AAACC,QAAAA,QAAQ,EAAE,UAAX;AAAuBC,QAAAA,GAAG,EAAE,CAA5B;AAA+BC,QAAAA,MAAM,EAAE,MAAvC;AAA+CC,QAAAA,KAAK,EAAE;AAAtD,OAA9B;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,QAAQ,MAAtB;AAAA,kCACI,QAAC,KAAD,CAAO,MAAP;AAAA,mCACI,QAAC,KAAD,CAAO,KAAP;AAAA,mDAAoC,KAAK7C,KAAL,CAAW8C,QAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,oCACA,QAAC,KAAD,CAAO,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,IAAI,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAC,UAA/C;AAA0D,cAAA,QAAQ,EAAE,KAAKC,UAAzE;AAAqF,cAAA,WAAW,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,IAAI,EAAC,MAArC;AAA4C,cAAA,EAAE,EAAC,UAA/C;AAA0D,cAAA,QAAQ,EAAE,KAAKA,UAAzE;AAAqF,cAAA,WAAW,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,eASI;AAAA,oCACI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,SAAhB;AAA0B,cAAA,KAAK,EAAE;AAAEH,gBAAAA,MAAM,EAAE;AAAV,eAAjC;AAAqD,cAAA,OAAO,EAAE,KAAK3C,gBAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAC,WAAhB;AAA4B,cAAA,KAAK,EAAE;AAAE2C,gBAAAA,MAAM,EAAE;AAAV,eAAnC;AAAuD,cAAA,OAAO,EAAE,KAAK5C,KAAL,CAAWgD,UAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAaI,QAAC,KAAD,CAAO,IAAP;AAAA,mCACI,QAAC,KAAD,CAAO,KAAP;AAAA,wBAAc,KAAKvC,KAAL,CAAWG;AAAzB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAuBH;;AAvEgC;;AA0ErCd,YAAY,CAACmD,WAAb,GAA2BpD,iBAA3B;AAEA,eAAeC,YAAf","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\nimport { Button, Form, Modal } from \"react-bootstrap\";\nimport BlockchainContext from \"../context/BlockchainContext\";\n\nclass LendingPopup extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contract: null,\n            nft: null,\n        }\n\n        this.handleSubmission=this.handleSubmission.bind(this);\n        this.handleLendingAmount=this.handleLendingAmount.bind(this)\n    }\n\n    async componentDidMount ()  {\n        this.setState({ contract: this.context.instance });\n        this.setState({ accounts: await this.context.accountsPromise }); \n\n        \n    }\n\n    handleSubmission =  (e) => {\n        this.setState({amountToLend: e.target.value})\n        console.log(this.state.amountToLend);\n        this.props.handleLend(this.state.amountToLend)\n    };\n    handleLendingAmount(e) {\n        this.setState({amountToLend: e.target.value})\n    }\n\n    async displayNFT(nftContract, tokenId, planetId) {\n        const addedNFT = await this.state.contract.methods.addNFT(nftContract, tokenId, planetId)\n      .send({ from: this.state.accounts[0], value: 0.002 * 10 ** 18 })\n      .then(res => {\n        console.log(res.events.Transfer.returnValues.tokenId)\n        const IDPlanet = res.events.Transfer.returnValues.tokenId;\n        console.log('Success', res);\n        alert('You have successfully created a new NFT! ID : ' + IDPlanet)\n\n        let radius = this.getRandomLogInt(5, 5);\n        this.createSphere(radius, IDPlanet);\n\n        return IDPlanet;\n      })\n      .catch(err => console.log(err));\n    }\n\n    render() {\n        return (\n            <div className='popup' style={{position: 'absolute', top: 0, margin: 'auto', right: 0}}>\n                <div className='popup_inner'>\n                    <Modal.Dialog centered>\n                        <Modal.Header>\n                            <Modal.Title>You are on the planet {this.props.planetID}.</Modal.Title>\n                        </Modal.Header>\n                        <div className=\"mb-3\">\n                        <Modal.Title>Add NFT to your planet</Modal.Title>\n                            <input className=\"form-control\" type=\"text\" id=\"formName\" onChange={this.changeName} placeholder='NFT Contract'/>\n                            <input className=\"form-control\" type=\"text\" id=\"formName\" onChange={this.changeName} placeholder='Token ID'/>\n                        </div>\n                        <div>\n                            <Button variant=\"primary\" style={{ margin: \"10px\" }} onClick={this.handleSubmission}>Submit</Button>\n                            <Button variant=\"secondary\" style={{ margin: \"10px\" }} onClick={this.props.closePopup}>Close</Button>\n                        </div>\n                        <Modal.Body>\n                            <Modal.Title>{this.state.nft}</Modal.Title>\n                        </Modal.Body>\n                    </Modal.Dialog>\n                </div>\n            </div>\n        );\n    }\n}\n\nLendingPopup.contextType = BlockchainContext;\n\nexport default LendingPopup;\n"]},"metadata":{},"sourceType":"module"}