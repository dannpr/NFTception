{"ast":null,"code":"var _jsxFileName = \"/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/App.js\";\nimport React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport getWeb3 from \"./getWeb3\";\nimport NFTPlanet from \"./contracts/NFTplanet.json\";\nimport * as THREE from \"three\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Routes from \"./Routes\";\nimport BlockchainContext from \"./context/BlockchainContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      accounts: null,\n      contract: null,\n      balance: 0\n    };\n  }\n\n  async componentDidMount() {\n    const web3 = getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]));\n    this.setState({\n      accounts,\n      balance\n    });\n  }\n\n  render() {\n    try {\n      let web3;\n      let instance;\n      let accountsPromise; // web3 instance.\n\n      console.log(\"RENDING\");\n      web3 = getWeb3(); // Use web3 to get the user's accounts.\n\n      accountsPromise = web3.eth.getAccounts();\n      instance = new web3.eth.Contract(NFTPlanet.abi, \"0xe27Ca6a5B8BF1350cE50D103853836a8d24a9f7E\");\n\n      if (this.state.accounts !== null) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App\",\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: /*#__PURE__*/_jsxDEV(BlockchainContext.Provider, {\n              value: {\n                instance,\n                accountsPromise,\n                web3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Navbar, {\n                bg: \"light\",\n                variant: \"light\",\n                styled: true,\n                style: {\n                  position: \"absolute\",\n                  top: 0,\n                  width: \"100vw\",\n                  display: \"flex\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n                  href: \"#home\",\n                  children: \"NFT PlanEth\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                  href: \"#home\",\n                  children: [\" \", \"Signed in as: \", this.state.accounts[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Nav, {\n                  className: \"mr-auto\",\n                  children: [/*#__PURE__*/_jsxDEV(Nav.Link, {\n                    href: \"/\",\n                    children: \"Home\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 69,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    href: \"/play\",\n                    children: \"Play\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Nav.Link, {\n                    href: \"/users\",\n                    children: \"Users\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 71,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n                  className: \"justify-content-end\",\n                  children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n                    children: [\"Balance: \", this.state.balance, \" ETH\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this);\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contract...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/App.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","getWeb3","NFTPlanet","THREE","Nav","Navbar","Routes","BlockchainContext","App","constructor","state","accounts","contract","balance","componentDidMount","web3","eth","getAccounts","utils","fromWei","getBalance","setState","render","instance","accountsPromise","console","log","Contract","abi","position","top","width","display","Error","error"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport getWeb3 from \"./getWeb3\";\nimport NFTPlanet from \"./contracts/NFTplanet.json\";\nimport * as THREE from \"three\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport Routes from \"./Routes\";\nimport BlockchainContext from \"./context/BlockchainContext\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      accounts: null,\n      contract: null,\n      balance:0,\n    };\n  }\n\n  async componentDidMount() {\n    const web3 = getWeb3();\n    const accounts = await web3.eth.getAccounts();\n    const balance = web3.utils.fromWei(await web3.eth.getBalance(accounts[0]));\n    this.setState({\n      accounts,\n      balance,\n    });\n  }\n\n  render() {\n    try {\n      let web3;\n      let instance;\n      let accountsPromise;\n      // web3 instance.\n      console.log(\"RENDING\");\n      web3 = getWeb3();\n\n      // Use web3 to get the user's accounts.\n      accountsPromise = web3.eth.getAccounts();\n\n      instance = new web3.eth.Contract(\n        NFTPlanet.abi,\n        \"0xe27Ca6a5B8BF1350cE50D103853836a8d24a9f7E\"\n      );\n      if (this.state.accounts !== null) {\n        return (\n          <div className='App'>\n            <Router>\n              <BlockchainContext.Provider\n                value={{ instance, accountsPromise, web3 }}\n              >\n                <Navbar\n                  bg='light'\n                  variant='light'\n                  styled\n                  style={{ position: \"absolute\", top: 0, width: \"100vw\" , display:\"flex\"}}\n                >\n                  <Navbar.Brand href='#home'>NFT PlanEth</Navbar.Brand>\n\n                  <Nav.Link href='#home'>\n                      {\" \"}\n                      Signed in as: {this.state.accounts[0]}\n                    </Nav.Link>\n\n                  <Nav className='mr-auto'>\n                    <Nav.Link href=\"/\">Home</Nav.Link>\n                    <Nav.Link href=\"/play\">Play</Nav.Link>\n                    <Nav.Link href=\"/users\">Users</Nav.Link>\n                  </Nav>\n\n                  <Navbar.Collapse className='justify-content-end'>\n                    <Navbar.Text>Balance: {this.state.balance} ETH</Navbar.Text>\n                  </Navbar.Collapse>\n                </Navbar>\n                <Routes />\n              </BlockchainContext.Provider>\n            </Router>\n          </div>\n        );\n      } else {\n        throw new Error();\n      }\n    } catch (error) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}