{"ast":null,"code":"var _jsxFileName = \"/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/App.js\";\nimport React, { Component, useLayoutEffect } from \"react\";\nimport * as THREE from \"three\";\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\nimport OrbitControls from \"three-orbitcontrols\";\nimport { Nav, Navbar } from \"react-bootstrap\";\nimport getWeb3 from \"./getWeb3\";\nimport LendingPopup from \"./Component/LendingPopup\";\nimport NFTLoader from \"./Component/NFTLoader\";\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport dotenv from 'dotenv';\nimport { NFTStorage, File } from 'nft.storage';\nimport NFTPlanet from './contracts/NFTplanet.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThreeScene extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateDimensions = () => {\n      this.setState({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    };\n\n    this.closePopup = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.closeLoader = () => {\n      this.setState({\n        showPopup: false\n      });\n    };\n\n    this.addPlanet = planet => {\n      this.planetArray.push(planet);\n      this.setState({\n        planets: planet\n      }, () => {\n        console.log(this.state.planets);\n      });\n    };\n\n    this.getXYPosition = planet => {\n      return {\n        positionX: planet.radius * Math.cos(planet.angle),\n        positionZ: planet.radius * Math.sin(planet.angle)\n      };\n    };\n\n    this.getRandomLogInt = (min, max) => {\n      min = Math.ceil(min);\n      max = Math.floor(max);\n      return 100 * Math.log(Math.floor(Math.random() * (max - min + 1)) + min);\n    };\n\n    this.createNFTPlanet = async (NFTName, NFTDescription, NFTFile) => {\n      dotenv.config(); //const apiKey = process.env.API_NFT_STORAGE_KEY;\n\n      const apiKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDIwODZiMDI0NjZEQTQwQjBFNDEyOGM0NTdCMDFDYzZDMzhhYUZhZEIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyNzE1NzExMjE5MCwibmFtZSI6IlBsYW5ldE5GVCJ9.wVX9L6uGGTRxxGg7jneXUYgd0Q8lveKFXnWCUo0tvkc\";\n      const client = new NFTStorage({\n        token: apiKey\n      });\n      const metadata = await client.store({\n        name: NFTName,\n        description: NFTDescription,\n        image: NFTFile\n      });\n      console.log(metadata.url);\n      this.state.contract.methods.mintPlanet(metadata.url, NFTName).send({\n        from: this.state.accounts[0],\n        value: 0.01 * 10 ** 18\n      }).then(res => {\n        console.log('Success', res);\n        alert(`You have successfully created an ${NFTName} NFT!`);\n      }).catch(err => console.log(err));\n    };\n\n    this.start = () => {\n      if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate);\n      }\n    };\n\n    this.stop = () => {\n      cancelAnimationFrame(this.frameId);\n    };\n\n    this.animate = () => {\n      for (let i = 0; i < this.planetArray.length; i++) {\n        let planet = this.planetArray[i];\n        this.planetArray[i].angle = this.planetArray[i].angle > 360 ? 0 : this.planetArray[i].angle + this.planetArray[i].radius / 100000;\n        this.planetArray[i].mesh.position.x = this.getXYPosition(this.planetArray[i]).positionX;\n        this.planetArray[i].mesh.position.z = this.getXYPosition(this.planetArray[i]).positionZ;\n      }\n\n      this.renderScene();\n      this.frameId = window.requestAnimationFrame(this.animate);\n    };\n\n    this.renderScene = () => {\n      // update the picking ray with the camera and mouse position\n      this.state.raycaster.setFromCamera(this.mouse, this.camera); // calculate objects intersecting the picking ray\n\n      const intersects = this.state.raycaster.intersectObjects(this.scene.children);\n\n      if (intersects.length === 1) {\n        intersects[0].object.material.color.set(0xff0000);\n        this.setState({\n          intersected: intersects[0].object\n        });\n      } else {\n        if (this.state.intersected !== null) {\n          this.state.intersected.material.color.set(0x6ab056);\n        }\n\n        this.setState({\n          intersected: null\n        });\n      }\n\n      if (this.renderer) this.renderer.render(this.scene, this.camera);\n    };\n\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight - 56,\n      planets: [],\n      raycaster: new THREE.Raycaster(),\n      intersected: null,\n      isSelected: false,\n      balance: null,\n      accounts: null,\n      web3: null,\n      showPopup: false,\n      showNFTLoader: true,\n      contract: null\n    };\n    this.planetArray = [];\n    this.mouse = new THREE.Vector2();\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.getXYPosition = this.getXYPosition.bind(this);\n    this.getRandomLogInt = this.getRandomLogInt.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseClick = this.onMouseClick.bind(this);\n    this.start = this.start.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.closeLoader = this.closeLoader.bind(this);\n    this.createNFTPlanet = this.createNFTPlanet.bind(this);\n  }\n\n  async componentDidMount() {\n    try {\n      // Get network provider and web3 instance.\n      console.log(\"RENDING\");\n      const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n      const accounts = await web3.eth.getAccounts(); // Get the contract instance.\n\n      /* const networkId = await web3.eth.net.getId();\n       console.log(NFTPlanet.networks);\n       const deployedNetwork = NFTPlanet.networks[networkId];\n       console.log(\"deployedNetwork\",deployedNetwork);*/\n\n      const instance = new web3.eth.Contract(NFTPlanet.abi, \"0xe27Ca6a5B8BF1350cE50D103853836a8d24a9f7E\"\n      /*\n                deployedNetwork && deployedNetwork.address,\n      */\n      );\n      this.state.contract = instance;\n      this.state.balance = await web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether'); //console.log(instance);\n\n      this.setState({\n        web3,\n        accounts\n      });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(`Failed to load web3, accounts, or contract. Check console for details.`);\n      console.error(error);\n    }\n\n    const width = this.state.width;\n    const height = this.state.height;\n    this.scene = new THREE.Scene();\n    this.setState({\n      mouse: new THREE.Vector2()\n    }); //Add Renderer\n\n    this.renderer = new THREE.WebGLRenderer({\n      antialias: true\n    });\n    this.renderer.setClearColor(\"#263238\");\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement); //add Camera\n\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 8;\n    this.camera.position.y = 5; //Camera Controls\n\n    const controls = new OrbitControls(this.camera, this.renderer.domElement); //LIGHTS\n\n    var lights = [];\n    lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]); //ADD Your 3D Models here\n\n    const cubeGeometry = new THREE.SphereGeometry(3);\n    const material = new THREE.MeshBasicMaterial({\n      color: '#6ab056',\n      wireframe: true\n    });\n    this.cubeMesh = new THREE.Mesh(cubeGeometry, material);\n    this.cubeMesh.position.x = 36;\n    this.cubeMesh.position.y = 0;\n    this.scene.add(this.cubeMesh);\n\n    for (let i = 2; i < 6; i++) {\n      const curve = new THREE.EllipseCurve(0, 0, // ax, aY\n      100 * Math.log(i), 100 * Math.log(i), // xRadius, yRadius\n      0, 2 * Math.PI, // aStartAngle, aEndAngle\n      false, // aClockwise\n      0 // aRotation\n      );\n      const points = curve.getPoints(128);\n      const geometry3 = new THREE.BufferGeometry().setFromPoints(points);\n      geometry3.rotateX(-Math.PI / 2);\n      const material3 = new THREE.LineBasicMaterial({\n        color: 0xCC0000\n      });\n      const ellipse = new THREE.Line(geometry3, material3);\n      this.scene.add(ellipse);\n    }\n\n    for (let i = 0; i < 100; i++) {\n      let radius = this.getRandomLogInt(2, 5);\n      this.createSphere(radius);\n    }\n\n    this.renderScene(); //start animation\n\n    this.start();\n    window.addEventListener('resize', this.updateDimensions);\n    window.addEventListener('mousemove', this.onMouseMove, false);\n    window.addEventListener('click', this.onMouseClick, false);\n    this.setState({\n      showPopup: true\n    });\n  }\n\n  createSphere(radius) {\n    const cubeGeometry = new THREE.SphereBufferGeometry(3, 16, 16);\n    const material = new THREE.MeshBasicMaterial({\n      color: '#6ab056',\n      wireframe: true\n    });\n    let cubeMesh = new THREE.Mesh(cubeGeometry, material);\n    let planet = {\n      radius: radius,\n      angle: Math.random() * 360\n    };\n    const posXY = this.getXYPosition(planet);\n    cubeMesh.position.x = posXY.positionX;\n    cubeMesh.position.z = posXY.positionZ;\n    cubeMesh.position.y = 0;\n    planet.mesh = cubeMesh;\n    this.addPlanet(planet);\n    cubeMesh.rotation.x = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.y = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.z = Math.random() * 2 * Math.PI;\n    const scale = Math.random() + 0.5;\n    cubeMesh.scale.x = scale;\n    cubeMesh.scale.y = scale;\n    cubeMesh.scale.z = scale;\n    cubeMesh.rotation.x = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.y = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.z = Math.random() * 2 * Math.PI;\n    this.scene.add(cubeMesh);\n  }\n\n  onMouseMove(event) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = this.mouse;\n    mouse.x = event.clientX / window.innerWidth * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    this.setState({\n      mouse: mouse\n    });\n  }\n\n  onMouseClick(event) {\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = this.mouse;\n    mouse.x = event.clientX / window.innerWidth * 2 - 1;\n    mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n    this.setState({\n      mouse: mouse\n    });\n\n    if (this.state.intersected !== null) {\n      this.setState({\n        isSelected: true\n      }, () => {\n        console.log(this.state.isSelected);\n        this.setState({\n          showPopup: false\n        });\n        console.log(`is showpopup : ${this.state.showPopup}`);\n      });\n    } else {\n      this.setState({\n        isSelected: false\n      }, () => {\n        console.log(this.state.isSelected);\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.web3) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Web3, accounts, and contract...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Navbar, {\n          bg: \"light\",\n          variant: \"light\",\n          styled: true,\n          children: [/*#__PURE__*/_jsxDEV(Navbar.Brand, {\n            href: \"#home\",\n            children: \"NFT PlanEth\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Nav, {\n            className: \"mr-auto\",\n            children: /*#__PURE__*/_jsxDEV(Nav.Link, {\n              href: \"#home\",\n              children: [\" Signed in as: \", this.state.accounts[0]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Navbar.Collapse, {\n            className: \"justify-content-end\",\n            children: /*#__PURE__*/_jsxDEV(Navbar.Text, {\n              children: [\"Balance: \", this.state.balance, \" ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: mount => {\n            this.mount = mount;\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), this.state.showPopup ? /*#__PURE__*/_jsxDEV(LendingPopup, {\n          handleLend: this.handleLend,\n          closePopup: this.closePopup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 17\n        }, this) : null, this.state.showNFTLoader ? /*#__PURE__*/_jsxDEV(NFTLoader, {\n          createNFTPlanet: this.createNFTPlanet,\n          closePopup: this.closeLoader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 17\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nexport default ThreeScene;","map":{"version":3,"sources":["/Users/macdann/Desktop/ethccHack-NFT/Solar-NFT/src/App.js"],"names":["React","Component","useLayoutEffect","THREE","MTLLoader","OBJLoader","OrbitControls","Nav","Navbar","getWeb3","LendingPopup","NFTLoader","axios","querystring","dotenv","NFTStorage","File","NFTPlanet","ThreeScene","constructor","props","updateDimensions","setState","width","window","innerWidth","height","innerHeight","closePopup","showPopup","closeLoader","addPlanet","planet","planetArray","push","planets","console","log","state","getXYPosition","positionX","radius","Math","cos","angle","positionZ","sin","getRandomLogInt","min","max","ceil","floor","random","createNFTPlanet","NFTName","NFTDescription","NFTFile","config","apiKey","client","token","metadata","store","name","description","image","url","contract","methods","mintPlanet","send","from","accounts","value","then","res","alert","catch","err","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","i","length","mesh","position","x","z","renderScene","raycaster","setFromCamera","mouse","camera","intersects","intersectObjects","scene","children","object","material","color","set","intersected","renderer","render","Raycaster","isSelected","balance","web3","showNFTLoader","Vector2","bind","onMouseMove","onMouseClick","componentDidMount","eth","getAccounts","instance","Contract","abi","utils","fromWei","getBalance","error","Scene","WebGLRenderer","antialias","setClearColor","setSize","mount","appendChild","domElement","PerspectiveCamera","y","controls","lights","PointLight","add","cubeGeometry","SphereGeometry","MeshBasicMaterial","wireframe","cubeMesh","Mesh","curve","EllipseCurve","PI","points","getPoints","geometry3","BufferGeometry","setFromPoints","rotateX","material3","LineBasicMaterial","ellipse","Line","createSphere","addEventListener","SphereBufferGeometry","posXY","rotation","scale","event","clientX","clientY","handleLend"],"mappings":"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","sourcesContent":["import React, {Component, useLayoutEffect} from \"react\";\nimport * as THREE from \"three\";\nimport { MTLLoader, OBJLoader } from \"three-obj-mtl-loader\";\nimport OrbitControls from \"three-orbitcontrols\";\nimport {Nav, Navbar} from \"react-bootstrap\";\nimport getWeb3 from \"./getWeb3\";\nimport LendingPopup from \"./Component/LendingPopup\"\nimport NFTLoader from \"./Component/NFTLoader\"\nimport axios from 'axios';\nimport querystring from 'querystring';\nimport dotenv from 'dotenv';\nimport { NFTStorage, File } from 'nft.storage'\nimport NFTPlanet from './contracts/NFTplanet.json'\n\n\nclass ThreeScene extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: window.innerWidth,\n      height: window.innerHeight-56,\n      planets: [],\n      raycaster: new THREE.Raycaster(),\n      intersected: null,\n      isSelected: false,\n      balance: null,\n      accounts: null,\n      web3: null,\n      showPopup: false,\n      showNFTLoader: true,\n      contract: null\n    };\n\n    this.planetArray = [];\n\n    this.mouse = new THREE.Vector2();\n\n    this.updateDimensions = this.updateDimensions.bind(this);\n    this.getXYPosition = this.getXYPosition.bind(this);\n    this.getRandomLogInt = this.getRandomLogInt.bind(this);\n    this.onMouseMove = this.onMouseMove.bind(this);\n    this.onMouseClick = this.onMouseClick.bind(this);\n    this.start = this.start.bind(this);\n    this.closePopup = this.closePopup.bind(this);\n    this.closeLoader = this.closeLoader.bind(this);\n    this.createNFTPlanet = this.createNFTPlanet.bind(this);\n  }\n\n  updateDimensions = () => {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  };\n\n  closePopup=()=> {\n    this.setState({\n      showPopup: false\n    });\n  }\n\n  closeLoader=()=> {\n    this.setState({\n      showPopup: false\n    });\n  }\n\n  async componentDidMount() {\n\n    try {\n      // Get network provider and web3 instance.\n      console.log(\"RENDING\");\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      // Get the contract instance.\n     /* const networkId = await web3.eth.net.getId();\n      console.log(NFTPlanet.networks);\n      const deployedNetwork = NFTPlanet.networks[networkId];\n      console.log(\"deployedNetwork\",deployedNetwork);*/\n\n      const instance = new web3.eth.Contract(\n          NFTPlanet.abi,\n  \"0xe27Ca6a5B8BF1350cE50D103853836a8d24a9f7E\"\n/*\n          deployedNetwork && deployedNetwork.address,\n*/\n      );\n\n      this.state.contract = instance;\n\n      this.state.balance = await web3.utils.fromWei(await web3.eth.getBalance(accounts[0]), 'ether');\n\n      //console.log(instance);\n      this.setState({ web3, accounts });\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n          `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n\n    const width = this.state.width;\n    const height = this.state.height;\n    this.scene = new THREE.Scene();\n    this.setState({mouse: new THREE.Vector2()});\n    //Add Renderer\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    this.renderer.setClearColor(\"#263238\");\n    this.renderer.setSize(width, height);\n    this.mount.appendChild(this.renderer.domElement);\n    //add Camera\n    this.camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n    this.camera.position.z = 8;\n    this.camera.position.y = 5;\n    //Camera Controls\n    const controls = new OrbitControls(this.camera, this.renderer.domElement);\n    //LIGHTS\n    var lights = [];\n    lights[0] = new THREE.PointLight(0x304ffe, 1, 0);\n    lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n    lights[0].position.set(0, 200, 0);\n    lights[1].position.set(100, 200, 100);\n    lights[2].position.set(-100, -200, -100);\n    this.scene.add(lights[0]);\n    this.scene.add(lights[1]);\n    this.scene.add(lights[2]);\n\n    //ADD Your 3D Models here\n    const cubeGeometry = new THREE.SphereGeometry(3);\n    const material = new THREE.MeshBasicMaterial({\n      color: '#6ab056',\n      wireframe: true\n    });\n    this.cubeMesh = new THREE.Mesh(cubeGeometry, material);\n\n    this.cubeMesh.position.x = 36;\n    this.cubeMesh.position.y = 0;\n    this.scene.add(this.cubeMesh);\n\n\n    for ( let i = 2; i < 6; i++) {\n      const curve = new THREE.EllipseCurve(\n          0,  0,            // ax, aY\n          100*Math.log(i), 100*Math.log(i),           // xRadius, yRadius\n          0,  2 * Math.PI,  // aStartAngle, aEndAngle\n          false,            // aClockwise\n          0                 // aRotation\n      );\n\n      const points = curve.getPoints( 128 );\n      const geometry3 = new THREE.BufferGeometry().setFromPoints( points );\n      geometry3.rotateX(-Math.PI / 2);\n      const material3 = new THREE.LineBasicMaterial( { color : 0xCC0000 } );\n      const ellipse = new THREE.Line( geometry3, material3 );\n      this.scene.add(ellipse);\n    }\n    for ( let i = 0; i < 100; i ++ ) {\n      let radius = this.getRandomLogInt(2, 5);\n      this.createSphere(radius)\n    }\n    this.renderScene();\n    //start animation\n    this.start();\n\n    window.addEventListener('resize', this.updateDimensions);\n    window.addEventListener( 'mousemove', this.onMouseMove, false );\n\n    window.addEventListener( 'click', this.onMouseClick, false );\n    this.setState({showPopup : true})\n\n  }\n\n  createSphere(radius) {\n      const cubeGeometry = new THREE.SphereBufferGeometry(3, 16, 16);\n      const material = new THREE.MeshBasicMaterial({\n          color: '#6ab056',\n          wireframe: true\n      });\n      let cubeMesh = new THREE.Mesh(cubeGeometry, material);\n\n      let planet = {\n        radius: radius,\n        angle:  Math.random() * 360,\n      }\n\n      const posXY = this.getXYPosition(planet);\n      cubeMesh.position.x = posXY.positionX;\n      cubeMesh.position.z = posXY.positionZ;\n      cubeMesh.position.y = 0;\n      planet.mesh = cubeMesh;\n      this.addPlanet(planet);\n\n      cubeMesh.rotation.x = Math.random() * 2 * Math.PI;\n      cubeMesh.rotation.y = Math.random() * 2 * Math.PI;\n      cubeMesh.rotation.z = Math.random() * 2 * Math.PI;\n      \n      const scale = Math.random() + 0.5;\n      cubeMesh.scale.x = scale;\n      cubeMesh.scale.y = scale;\n      cubeMesh.scale.z = scale;\n\n    cubeMesh.rotation.x = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.y = Math.random() * 2 * Math.PI;\n    cubeMesh.rotation.z = Math.random() * 2 * Math.PI;\n\n    this.scene.add(cubeMesh);\n  }\n\n  addPlanet = (planet) => {\n    this.planetArray.push(planet);\n    this.setState({planets: planet}, () => {\n      console.log(this.state.planets);\n    });\n  }\n\n  getXYPosition = (planet) => {\n    return {\n      positionX: planet.radius*Math.cos(planet.angle),\n      positionZ: planet.radius*Math.sin(planet.angle)\n    }\n  }\n\n  getRandomLogInt = (min, max) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return 100*Math.log(Math.floor(Math.random() * (max - min + 1)) + min);\n  }\n\n  createNFTPlanet = async (NFTName, NFTDescription, NFTFile) => {\n\n    dotenv.config();\n    //const apiKey = process.env.API_NFT_STORAGE_KEY;\n    const apiKey = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDIwODZiMDI0NjZEQTQwQjBFNDEyOGM0NTdCMDFDYzZDMzhhYUZhZEIiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTYyNzE1NzExMjE5MCwibmFtZSI6IlBsYW5ldE5GVCJ9.wVX9L6uGGTRxxGg7jneXUYgd0Q8lveKFXnWCUo0tvkc\";\n    const client = new NFTStorage({token: apiKey})\n\n    const metadata = await client.store({\n      name: NFTName,\n      description: NFTDescription,\n      image: NFTFile\n    });\n    console.log(metadata.url);\n\n    this.state.contract.methods.mintPlanet(metadata.url, NFTName)\n        .send({from: this.state.accounts[0], value: 0.01*10**18})\n        .then(res => {\n          console.log('Success', res);\n          alert(`You have successfully created an ${NFTName} NFT!`)\n        })\n        .catch(err => console.log(err));\n  }\n\n\n  onMouseMove( event ) {\n\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n    let mouse = this.mouse;\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    this.setState({mouse: mouse})\n  }\n\n  onMouseClick( event ) {\n\n    // calculate mouse position in normalized device coordinates\n    // (-1 to +1) for both components\n\n    let mouse = this.mouse;\n    mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;\n    mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;\n    this.setState({mouse: mouse})\n\n    if (this.state.intersected !== null) {\n      this.setState({isSelected: true}, () => {\n        console.log(this.state.isSelected);\n        this.setState({showPopup : false})\n        console.log(`is showpopup : ${this.state.showPopup}`);\n      });\n    } else {\n      this.setState({isSelected: false}, () => {\n        console.log(this.state.isSelected);\n      });\n    }\n\n  }\n\n  start = () => {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate);\n    }\n  };\n  stop = () => {\n    cancelAnimationFrame(this.frameId);\n  };\n  animate = () => {\n    for (let i = 0; i < this.planetArray.length; i++) {\n      let planet = this.planetArray[i]\n\n      this.planetArray[i].angle = (this.planetArray[i].angle > 360) ? 0 : this.planetArray[i].angle + this.planetArray[i].radius/100000;\n      this.planetArray[i].mesh.position.x = this.getXYPosition(this.planetArray[i]).positionX;\n      this.planetArray[i].mesh.position.z = this.getXYPosition(this.planetArray[i]).positionZ;\n    }\n\n    this.renderScene();\n    this.frameId = window.requestAnimationFrame(this.animate);\n\n  };\n\n  renderScene = () => {\n      // update the picking ray with the camera and mouse position\n    this.state.raycaster.setFromCamera( this.mouse, this.camera );\n\n    // calculate objects intersecting the picking ray\n    const intersects = this.state.raycaster.intersectObjects( this.scene.children );\n\n    if ( intersects.length === 1) {\n\n      intersects[0].object.material.color.set(0xff0000);\n      this.setState({intersected: intersects[0].object});\n    } else {\n      if (this.state.intersected !== null) {\n        this.state.intersected.material.color.set(0x6ab056);\n      }\n      this.setState({intersected: null});\n    }\n\n    if (this.renderer) this.renderer.render(this.scene, this.camera);\n\n  };\n  render() {\n    if (!this.state.web3) {\n      return <div>Loading Web3, accounts, and contract...</div>;\n    }\n    else {\n      return (\n          <div className=\"App\">\n            <Navbar bg=\"light\" variant=\"light\" styled>\n              <Navbar.Brand href=\"#home\">NFT PlanEth</Navbar.Brand>\n\n              <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\"> Signed in as: {this.state.accounts[0]}</Nav.Link>\n              </Nav>\n\n              <Navbar.Collapse className=\"justify-content-end\">\n                <Navbar.Text>\n                  Balance: {this.state.balance} ETH\n                </Navbar.Text>\n              </Navbar.Collapse>\n            </Navbar>\n            <div ref={mount => {\n              this.mount = mount\n            }}\n            />\n            {this.state.showPopup ?\n                <LendingPopup\n                    handleLend={this.handleLend}\n                    closePopup={this.closePopup}\n                />\n                : null\n            }\n            {this.state.showNFTLoader ?\n                <NFTLoader\n                    createNFTPlanet={this.createNFTPlanet}\n                    closePopup={this.closeLoader}\n                />\n                : null\n            }\n          </div>\n      )\n    }\n  }}\nexport default ThreeScene;\n"]},"metadata":{},"sourceType":"module"}