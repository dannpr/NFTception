{"version":3,"file":"lib.spec.cjs","sources":["../../test/lib.spec.js"],"sourcesContent":["import { CarReader } from '@ipld/car'\nimport * as assert from 'uvu/assert'\nimport { NFTStorage, Blob, File, Token } from 'nft.storage'\nimport { CID } from 'multiformats'\nimport { pack } from 'ipfs-car/pack'\nimport { CarWriter } from '@ipld/car'\nimport * as dagCbor from '@ipld/dag-cbor'\nimport { garbage } from 'ipld-garbage'\nimport { sha256 } from 'multiformats/hashes/sha2'\n\nconst DWEB_LINK = 'dweb.link'\n\ndescribe('client', () => {\n  const { AUTH_TOKEN, SERVICE_ENDPOINT } = process.env\n  const token = AUTH_TOKEN || ''\n  const endpoint = new URL(SERVICE_ENDPOINT || '')\n\n  it('interface', () => {\n    assert.equal(typeof NFTStorage, 'function')\n    const client = new NFTStorage({ token: 'secret' })\n    assert.ok(client instanceof NFTStorage)\n    assert.equal(typeof client.storeBlob, 'function')\n    assert.equal(typeof client.storeDirectory, 'function')\n    assert.equal(typeof client.status, 'function')\n    assert.equal(typeof client.delete, 'function')\n\n    assert.equal(typeof NFTStorage.storeBlob, 'function')\n    assert.equal(typeof NFTStorage.storeDirectory, 'function')\n    assert.equal(typeof NFTStorage.status, 'function')\n    assert.equal(typeof NFTStorage.delete, 'function')\n  })\n  describe('upload', () => {\n    it('upload blob', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeBlob(new Blob(['hello world']))\n      assert.equal(cid, 'Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD')\n    })\n\n    it('can upload twice', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const blob = new Blob(['upload twice'])\n      const cid1 = await client.storeBlob(blob)\n      const status1 = await client.status(cid1)\n\n      const cid2 = await client.storeBlob(blob)\n      const status2 = await client.status(cid2)\n\n      assert.equal(cid1, cid2, 'cids match')\n      assert.equal(status1.created, status2.created, 'dates match')\n    })\n\n    it('errors with invalid token', async () => {\n      const client = new NFTStorage({ token: 'wrong', endpoint })\n      const blob = new Blob(['upload twice'])\n\n      try {\n        await client.storeBlob(blob)\n        assert.unreachable('sholud have failed')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /Unauthorized/)\n      }\n    })\n\n    it('errors without token', async () => {\n      // @ts-ignore\n      const client = new NFTStorage({ endpoint })\n      try {\n        await client.storeBlob(new Blob(['blobby']))\n        assert.unreachable('should have thrown')\n      } catch (err) {\n        assert.is(err.message, 'missing token')\n      }\n    })\n\n    it('errors without content', async () => {\n      const client = new NFTStorage({ endpoint, token })\n      try {\n        await client.storeBlob(new Blob([]))\n        assert.unreachable('should have thrown')\n      } catch (err) {\n        assert.match(err.message, /provide some content/)\n      }\n    })\n  })\n\n  describe('upload car', () => {\n    it('upload CAR with a blob', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const { root, out } = await pack({\n        input: [new TextEncoder().encode('hello world')],\n      })\n      const expectedCid = root.toString()\n      const carParts = []\n      for await (const part of out) {\n        carParts.push(part)\n      }\n      const car = new Blob(carParts, { type: 'application/car' })\n      const cid = await client.storeCar(car)\n      assert.equal(cid, expectedCid)\n    })\n\n    it('upload CAR with a blob lacking blob.type', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const { root, out } = await pack({\n        input: [new TextEncoder().encode('hello world')],\n      })\n      const expectedCid = root.toString()\n      const carParts = []\n      for await (const part of out) {\n        carParts.push(part)\n      }\n      const car = new Blob(carParts)\n      const cid = await client.storeCar(car)\n      assert.equal(cid, expectedCid)\n    })\n\n    it('upload CAR with a CarReader', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const { root, out } = await pack({\n        input: [new TextEncoder().encode('hello world')],\n      })\n      const expectedCid = root.toString()\n\n      const carReader = await CarReader.fromIterable(out)\n\n      const cid = await client.storeCar(carReader)\n      assert.equal(cid, expectedCid)\n    })\n\n    it('upload large CAR with a CarReader', async function () {\n      this.timeout(130e3)\n      let uploadedChunks = 0\n\n      const client = new NFTStorage({ token, endpoint })\n\n      const targetSize = 1024 * 1024 * 120 // ~120MB CARs\n      const carReader = await CarReader.fromIterable(\n        await randomCar(targetSize)\n      )\n\n      const roots = await carReader.getRoots()\n      const expectedCid = roots[0]?.toString()\n\n      const cid = await client.storeCar(carReader, {\n        onStoredChunk: () => {\n          uploadedChunks++\n        },\n      })\n      assert.ok(uploadedChunks >= 12)\n      assert.equal(cid, expectedCid)\n    })\n  })\n\n  describe('upload dir', () => {\n    it('upload a file', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeDirectory([\n        new File(['hello world'], 'hello.txt'),\n      ])\n\n      assert.equal(cid, 'QmNxvA5bwvPGgMXbmtyhxA1cKFdvQXnsGnZLCGor3AzYxJ')\n    })\n\n    it('upload multiple files', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeDirectory([\n        new File(['hello world'], 'hello.txt'),\n        new File(\n          [JSON.stringify({ from: 'incognito' }, null, 2)],\n          'metadata.json'\n        ),\n      ])\n\n      assert.equal(cid, 'QmQAE2tjfwYYmEFFEEnfr12CWikMqgwwtq5gqfyb62bJpw')\n    })\n\n    it('upload empty files', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.storeDirectory([new File([], 'empty.txt')])\n        assert.unreachable('should fail if no content is provided')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /provide some content/i)\n      }\n    })\n\n    it('upload nothing', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.storeDirectory([])\n        assert.unreachable('should fail if no content is provided')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /provide some content/i)\n      }\n    })\n\n    it('upload empty files', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.storeDirectory([new File([], 'empty.txt')])\n        assert.unreachable('should fail if no content is provided')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /provide some content/i)\n      }\n    })\n    it('errors without token', async () => {\n      // @ts-ignore\n      const client = new NFTStorage({ endpoint })\n      try {\n        await client.storeDirectory([new File(['file'], 'file.txt')])\n        assert.unreachable('should have thrown')\n      } catch (err) {\n        assert.is(err.message, 'missing token')\n      }\n    })\n\n    it('errors with invalid token', async () => {\n      const client = new NFTStorage({ token: 'wrong', endpoint })\n\n      try {\n        await client.storeDirectory([new File(['wrong token'], 'foo.txt')])\n        assert.unreachable('sholud have failed')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /Unauthorized/)\n      }\n    })\n  })\n\n  describe('store', async () => {\n    it('requires name', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        // @ts-expect-error\n        await client.store({})\n        assert.unreachable('should have failed')\n      } catch (error) {\n        assert.ok(error instanceof TypeError)\n        assert.match(\n          error,\n          /string property `name` identifying the asset is required/\n        )\n      }\n    })\n\n    it('requires description', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        // @ts-expect-error\n        await client.store({ name: 'name' })\n        assert.unreachable('sholud have failed')\n      } catch (error) {\n        assert.ok(error instanceof TypeError)\n        assert.match(\n          error,\n          /string property `description` describing asset is required/\n        )\n      }\n    })\n\n    it('requires image', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        // @ts-expect-error\n        await client.store({ name: 'name', description: 'stuff' })\n        assert.unreachable('sholud have failed')\n      } catch (error) {\n        assert.ok(error instanceof TypeError)\n        assert.match(error, /proprety `image` must be a Blob or File/)\n      }\n    })\n\n    it('requires image mime type', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.store({\n          name: 'name',\n          description: 'stuff',\n          image: new Blob(['bla bla']),\n        })\n      } catch (error) {\n        assert.ok(error instanceof TypeError)\n        assert.match(error, /Blob or File object with `image\\/\\*` mime type/)\n      }\n    })\n\n    it('expects decimal to be an int', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.store({\n          name: 'name',\n          description: 'stuff',\n          image: new Blob(['pretend image'], { type: 'image/png' }),\n          // @ts-expect-error\n          decimals: 'foo',\n        })\n      } catch (error) {\n        assert.ok(error instanceof TypeError)\n        assert.match(error, /proprety `decimals` must be an integer value/)\n      }\n    })\n\n    it('errors without token', async () => {\n      const client = new NFTStorage({ token: 'wrong', endpoint })\n\n      try {\n        await client.store({\n          name: 'name',\n          description: 'tada',\n          image: new Blob([], { type: 'image/png' }),\n        })\n        assert.unreachable('sholud have failed')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /Unauthorized/)\n      }\n    })\n\n    it('uploads image', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const result = await client.store({\n        name: 'name',\n        description: 'stuff',\n        image: new Blob(['fake image'], { type: 'image/png' }),\n      })\n\n      assert.ok(typeof result.url === 'string')\n      assert.ok(new URL(result.url).protocol, 'ipfs:')\n\n      assert.ok(typeof result.ipnft === 'string')\n      assert.equal(CID.parse(result.ipnft).version, 1)\n\n      assert.equal(result.data.name, 'name')\n      assert.equal(result.data.description, 'stuff')\n      assert.ok(result.data.image instanceof URL)\n      assert.ok(result.data.image.protocol, 'ipfs:')\n\n      const embed = result.embed()\n      assert.equal(embed.name, 'name')\n      assert.equal(embed.description, 'stuff')\n      assert.ok(embed.image instanceof URL)\n      assert.ok(embed.image.protocol, 'https:')\n    })\n\n    it('store with properties', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const trick =\n        'ipfs://bafyreiemweb3jxougg7vaovg7wyiohwqszmgwry5xwitw3heepucg6vyd4'\n      const result = await client.store({\n        name: 'name',\n        description: 'stuff',\n        image: new File(['fake image'], 'cat.png', { type: 'image/png' }),\n        properties: {\n          extra: 'meta',\n          trick,\n          src: [\n            new File(['hello'], 'hello.txt', { type: 'text/plain' }),\n            new Blob(['bye']),\n          ],\n        },\n      })\n\n      assert.ok(result instanceof Token)\n\n      const cid = CID.parse(result.ipnft)\n      assert.equal(cid.version, 1)\n\n      assert.ok(typeof result.url === 'string')\n      assert.ok(result.url.startsWith('ipfs:'))\n\n      assert.equal(result.data.name, 'name')\n      assert.equal(result.data.description, 'stuff')\n      assert.ok(result.data.image instanceof URL)\n      assert.ok(result.data.image.protocol, 'ipfs:')\n\n      assert.equal(result.data.properties.extra, 'meta')\n      assert.equal(result.data.properties.trick, trick)\n      assert.ok(Array.isArray(result.data.properties.src))\n      assert.equal(result.data.properties.src.length, 2)\n\n      const [h, b] = /** @type {[URL, URL]} */ (result.data.properties.src)\n      assert.ok(h instanceof URL)\n      assert.equal(h.protocol, 'ipfs:')\n\n      assert.ok(b instanceof URL)\n      assert.equal(b.protocol, 'ipfs:')\n\n      const embed = result.embed()\n\n      assert.equal(embed.name, 'name')\n      assert.equal(embed.description, 'stuff')\n      assert.ok(embed.image instanceof URL)\n      assert.ok(embed.image.protocol, 'https:')\n      assert.ok(embed.image.host, DWEB_LINK)\n\n      assert.equal(embed.properties.extra, 'meta')\n      assert.ok(Array.isArray(embed.properties.src))\n      assert.equal(embed.properties.src.length, 2)\n\n      const [h2, b2] = /** @type {[URL, URL]} */ (embed.properties.src)\n      assert.ok(h2 instanceof URL)\n      assert.equal(h2.protocol, 'https:')\n      assert.equal(h2.host, DWEB_LINK)\n\n      assert.ok(b2 instanceof URL)\n      assert.equal(b2.protocol, 'https:')\n      assert.equal(b2.host, DWEB_LINK)\n    })\n\n    it('store with OpenSea extensions', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const result = await client.store({\n        name: 'name',\n        description: 'stuff',\n        image: new File(['fake image'], 'cat.png', { type: 'image/png' }),\n        animation_url: new File(['fake vid'], 'vid.mp4', { type: 'video/mp4' }),\n        background_color: 'ffffff',\n        youtube_url: 'https://youtu.be/dQw4w9WgXcQ',\n        attributes: [\n          { trait_type: 'Aqua Power', display_type: 'boost_number' },\n        ],\n      })\n\n      assert.ok(result instanceof Token)\n\n      const cid = CID.parse(result.ipnft)\n      assert.equal(cid.version, 1)\n\n      assert.ok(typeof result.url === 'string')\n      assert.ok(result.url.startsWith('ipfs:'))\n\n      assert.equal(result.data.name, 'name')\n      assert.equal(result.data.description, 'stuff')\n      assert.equal(result.data.background_color, 'ffffff')\n      assert.equal(result.data.youtube_url, 'https://youtu.be/dQw4w9WgXcQ')\n      assert.equal(result.data.attributes, [\n        {\n          trait_type: 'Aqua Power',\n          display_type: 'boost_number',\n        },\n      ])\n      assert.ok(result.data.image instanceof URL)\n      assert.ok(result.data.image.protocol, 'ipfs:')\n      assert.ok(result.data.animation_url instanceof URL)\n      assert.ok(result.data.animation_url.protocol, 'ipfs:')\n    })\n  })\n\n  describe('status', () => {\n    const client = new NFTStorage({ token, endpoint })\n\n    /** @type {string[]} */\n    let preloaded\n    beforeEach(async () => {\n      preloaded = [\n        // QmaCxv35MgHdAD2K9Tn8xrKVZJw7dauYi4V1GmkQRNYbvP\n        await client.storeBlob(new Blob(['preload status'])),\n        // QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28\n        // await client.storeBlob(new Blob(['missing']))\n      ]\n    })\n\n    afterEach(async () => {\n      await Promise.all(preloaded.map((cid) => client.delete(cid)))\n    })\n\n    it('found', async () => {\n      const cid = 'QmaCxv35MgHdAD2K9Tn8xrKVZJw7dauYi4V1GmkQRNYbvP'\n      const status = await client.status(cid)\n      assert.equal(status.cid, cid)\n    })\n\n    it('not found', async () => {\n      const cid = 'QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28'\n      try {\n        await client.status(cid)\n        assert.unreachable('Expected to fail')\n      } catch (error) {\n        assert.ok(error.message.match(/not found/))\n      }\n    })\n\n    it('errors without token', async () => {\n      // @ts-ignore\n      const client = new NFTStorage({ endpoint })\n      try {\n        await client.status('QmaCxv35MgHdAD2K9Tn8xrKVZJw7dauYi4V1GmkQRNYbvP')\n        assert.unreachable('should have thrown')\n      } catch (err) {\n        assert.is(err.message, 'missing token')\n      }\n    })\n\n    it('decodes dates in deals', async () => {\n      const cid = 'bafyreigdcnuc6w7stviim6a5m7uwqdw6p3z5zrqr22xt3num3ozra4ciqi'\n      const pieceCid =\n        'bagayreigdcnuc6w7stviim6a5m7uwqdw6p3z5zrqr22xt3num3ozra4ciqi'\n      const status = await client.status(cid)\n      assert.equal(status.cid, cid)\n      assert.ok(status.created instanceof Date)\n      assert.equal(status.deals, [\n        {\n          lastChanged: new Date('2021-03-18T11:46:50.000Z'),\n          status: 'queued',\n        },\n        {\n          batchRootCid: cid,\n          lastChanged: new Date('2021-03-18T11:46:50.000Z'),\n          miner: 't01234',\n          network: 'nerpanet',\n          pieceCid,\n          status: 'proposing',\n        },\n        {\n          batchRootCid: cid,\n          lastChanged: new Date('2021-03-18T11:46:50.000Z'),\n          miner: 'f05678',\n          network: 'mainnet',\n          pieceCid,\n          status: 'accepted',\n        },\n        {\n          batchRootCid: cid,\n          lastChanged: new Date('2021-03-18T11:46:50.000Z'),\n          miner: 'f09999',\n          network: 'mainnet',\n          pieceCid,\n          status: 'failed',\n          statusText: 'miner rejected my stuffz',\n        },\n        {\n          batchRootCid: cid,\n          chainDealID: 24526235,\n          dealActivation: new Date('2021-03-18T11:46:50.000Z'),\n          dealExpiration: new Date('2021-03-18T11:46:50.000Z'),\n          lastChanged: new Date('2021-03-18T11:46:50.000Z'),\n          miner: 'f34523',\n          network: 'mainnet',\n          pieceCid,\n          status: 'active',\n        },\n      ])\n    })\n  })\n\n  describe('delete', () => {\n    it('ok to delete unknown', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = 'Qmf412jQZiuVUtdgnB36FXFX7xg5V6KEbSJ4dpQuhkLyfD'\n      const result = await client.delete(cid)\n      assert.equal(result, undefined)\n    })\n\n    it('gone after delete', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      const cid = await client.storeBlob(new Blob(['to be deleted']))\n      await client.status(cid)\n      await client.delete(cid)\n      try {\n        await client.status(cid)\n        assert.unreachable('should be gone')\n      } catch (error) {\n        assert.ok(error.message.includes('not found'))\n      }\n    })\n\n    it('invalid cid errors', async () => {\n      const client = new NFTStorage({ token, endpoint })\n      try {\n        await client.delete('foo')\n        assert.unreachable('invalid cid')\n      } catch (error) {\n        assert.ok(error instanceof Error)\n        assert.match(error, /parse non base32/)\n      }\n    })\n\n    it('errors without token', async () => {\n      // @ts-ignore\n      const client = new NFTStorage({ endpoint })\n      try {\n        const cid = await NFTStorage.storeBlob(\n          { token, endpoint },\n          new Blob(['deleteme'])\n        )\n        await client.delete(cid)\n        assert.unreachable('should have thrown')\n      } catch (err) {\n        assert.is(err.message, 'missing token')\n      }\n    })\n  })\n\n  describe('check', () => {\n    const client = new NFTStorage({ token, endpoint })\n\n    /** @type {string[]} */\n    let preloaded\n    beforeEach(async () => {\n      preloaded = [\n        // QmVRC63ZHwHQBC4pkqbiQjPjdHVKueafTpwmkNHhnVfwLQ\n        await client.storeBlob(new Blob(['preload check'])),\n        // QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28\n        // await client.storeBlob(new Blob(['missing']))\n      ]\n    })\n\n    afterEach(async () => {\n      await Promise.all(preloaded.map((cid) => client.delete(cid)))\n    })\n\n    it('found', async () => {\n      const cid = 'QmVRC63ZHwHQBC4pkqbiQjPjdHVKueafTpwmkNHhnVfwLQ'\n      const status = await client.check(cid)\n      assert.equal(status.cid, cid)\n    })\n\n    it('not found', async () => {\n      const cid = 'QmTPFUEcZvqKBYqJM3itqkDiqJaApYzLJ1ht6iBD4d6M28'\n      try {\n        await client.check(cid)\n        assert.unreachable('Expected to fail')\n      } catch (error) {\n        assert.ok(error.message.match(/not found/))\n      }\n    })\n  })\n})\n\nconst MAX_BLOCK_SIZE = 1024 * 1024 * 4\n\nfunction randomBlockSize() {\n  const max = MAX_BLOCK_SIZE\n  const min = max / 2\n  return Math.random() * (max - min) + min\n}\n\n/**\n * @param {number} targetSize\n * @returns {Promise<AsyncIterable<Uint8Array>>}\n */\nasync function randomCar(targetSize) {\n  const blocks = []\n  let size = 0\n  const seen = new Set()\n  while (size < targetSize) {\n    const bytes = dagCbor.encode(\n      garbage(randomBlockSize(), { weights: { CID: 0 } })\n    )\n    const hash = await sha256.digest(bytes)\n    const cid = CID.create(1, dagCbor.code, hash)\n    if (seen.has(cid.toString())) continue\n    seen.add(cid.toString())\n    blocks.push({ cid, bytes })\n    size += bytes.length\n  }\n  const rootBytes = dagCbor.encode(blocks.map((b) => b.cid))\n  const rootHash = await sha256.digest(rootBytes)\n  const rootCid = CID.create(1, dagCbor.code, rootHash)\n  const { writer, out } = CarWriter.create([rootCid])\n  writer.put({ cid: rootCid, bytes: rootBytes })\n  blocks.forEach((b) => writer.put(b))\n  writer.close()\n  return out\n}\n"],"names":["assert","NFTStorage","Blob","pack","CarReader","File","CID","Token","dagCbor","garbage","sha256","CarWriter"],"mappings":"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"}