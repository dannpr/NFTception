{"version":3,"file":"service.cjs","sources":["../../test/service.js"],"sourcesContent":["import { CID } from 'multiformats'\nimport { sha256 } from 'multiformats/hashes/sha2'\nimport { importCar, importBlob, importDirectory } from './importer.js'\nimport { Response, Request } from './mock-server.js'\nimport * as CBOR from '@ipld/dag-cbor'\nimport setIn from 'just-safe-set'\n/**\n * @param {Request} request\n */\nconst headers = ({ headers }) => ({\n  'Access-Control-Allow-Origin': headers.get('origin') || '*',\n  'Access-Control-Allow-Methods': 'GET,POST,DELETE,OPTIONS',\n  // Allow all future content Request headers to go back to browser\n  // such as Authorization (Bearer) or X-Client-Name-Version\n  'Access-Control-Allow-Headers':\n    headers.get('Access-Control-Request-Headers') || '',\n  'Content-Type': 'application/json;charset=UTF-8',\n})\n\n/**\n * @param {Request} request\n */\nconst importUpload = async (request) => {\n  const contentType = request.headers.get('content-type') || ''\n  if (contentType.includes('multipart/form-data')) {\n    const data = await request.formData()\n    const files = /** @type {File[]} */ (data.getAll('file'))\n    if (files.length === 0) {\n      throw Error('No files were provided')\n    }\n    return await importDirectory(files)\n  } else if (contentType.includes('application/car')) {\n    const content = await request.arrayBuffer()\n    return await importCar(new Uint8Array(content))\n  } else {\n    const content = await request.arrayBuffer()\n    return await importBlob(new Uint8Array(content))\n  }\n}\n\n/**\n * @param {File} file\n * @returns {Promise<CID>}\n */\nconst importAsset = async (file) => {\n  const { cid } = await importDirectory([file])\n  return CID.parse(cid.toString())\n}\n\n/**\n * @param {Request} request\n */\nconst importToken = async (request) => {\n  const contentType = request.headers.get('content-type') || ''\n  if (contentType.includes('multipart/form-data')) {\n    const form = await request.formData()\n\n    const data = JSON.parse(/** @type {string} */ (form.get('meta')))\n    const dag = JSON.parse(JSON.stringify(data))\n\n    for (const [name, content] of form.entries()) {\n      if (name !== 'meta') {\n        const file = /** @type {File} */ (content)\n        const cid = await importAsset(file)\n        const href = `ipfs://${cid}/${file.name}`\n        const path = name.split('.')\n        setIn(data, path, href)\n        setIn(dag, path, cid)\n      }\n    }\n\n    const metadata = await importBlob(JSON.stringify(data))\n\n    const bytes = CBOR.encode({\n      ...dag,\n      'metadata.json': metadata.cid,\n      type: 'nft',\n    })\n    const hash = await sha256.digest(bytes)\n    const ipnft = CID.create(1, CBOR.code, hash)\n\n    const result = {\n      ok: true,\n      value: {\n        ipnft: ipnft.toString(),\n        url: `ipfs://${ipnft}/metadata.json`,\n        data,\n      },\n    }\n\n    return result\n  } else {\n    throw Error('/store expects multipart/form-data')\n  }\n}\n\n/**\n * @typedef {{AUTH_TOKEN:string, store: Map<string, any>}} State\n * @param {string} [token]\n * @param {Map<string, any>} [store]\n * @returns {State}\n */\nexport const init = (\n  token = Math.random().toString(32).slice(2),\n  store = new Map()\n) => ({\n  AUTH_TOKEN: token,\n  store,\n})\n\n/**\n * @param {Request} request\n * @param {State} state\n */\nexport const handle = async (request, { store, AUTH_TOKEN }) => {\n  const url = new URL(request.url)\n\n  const [_, ...pathParts] = url.pathname.split('/')\n  const auth = request.headers.get('authorization')\n  const [, token] = (auth && auth.match(/Bearer (.+)/)) || []\n\n  // If preflight\n  if (request.method === 'OPTIONS') {\n    return new Response('', { headers: headers(request) })\n  }\n\n  const authorize = () => {\n    // If not authorized 401\n    if (token !== AUTH_TOKEN) {\n      throw Object.assign(new Error('Unauthorized'), { status: 401 })\n    }\n  }\n\n  try {\n    switch (`${request.method} /${pathParts.join('/')}`) {\n      case 'POST /upload': {\n        authorize()\n        const { cid } = await importUpload(request)\n        const key = `${token}:${cid}`\n        if (!store.get(key)) {\n          const created = new Date()\n          store.set(key, {\n            cid: cid.toString(),\n            deals: [],\n            pin: {\n              cid: cid.toString(),\n              status: 'pinned',\n              created,\n            },\n            created,\n          })\n        }\n        const result = { ok: true, value: { cid: cid.toString() } }\n\n        return new Response(JSON.stringify(result), {\n          headers: headers(request),\n        })\n      }\n      case 'POST /store': {\n        authorize()\n        const result = await importToken(request)\n        return new Response(JSON.stringify(result), {\n          headers: headers(request),\n        })\n      }\n      case `GET /check/${pathParts[1]}`: {\n        const cid = CID.parse(pathParts[1] || '')\n        const value = store.get(`${AUTH_TOKEN}:${cid}`)\n        if (!value) {\n          throw Object.assign(new Error(`not found: ${cid}`), { status: 404 })\n        }\n        return new Response(\n          JSON.stringify({\n            ok: true,\n            value: {\n              cid: cid.toString(),\n              pin: { status: value.pin.status },\n              deals: value.deals,\n            },\n          }),\n          {\n            headers: headers(request),\n          }\n        )\n      }\n      case `GET /${pathParts[0]}`: {\n        authorize()\n        const cid = CID.parse(pathParts[0] || '')\n        const value = store.get(`${token}:${cid}`)\n        const [status, result] = value\n          ? [200, { ok: true, value }]\n          : [\n              404,\n              {\n                ok: false,\n                error: { message: `NFT with a CID ${cid} not found` },\n              },\n            ]\n\n        return new Response(JSON.stringify(result), {\n          status,\n          headers: headers(request),\n        })\n      }\n      case `DELETE /${pathParts[0]}`: {\n        authorize()\n        const cid = CID.parse(pathParts[0] || '')\n        store.delete(`${token}:${cid}`)\n        return new Response(JSON.stringify({ ok: true }), {\n          headers: headers(request),\n        })\n      }\n      default: {\n        const result = {\n          ok: false,\n          error: { message: `No such API endpoint ${url.pathname}` },\n        }\n\n        return new Response(JSON.stringify(result), {\n          status: 404,\n          headers: headers(request),\n        })\n      }\n    }\n  } catch (error) {\n    return new Response(\n      JSON.stringify({\n        ok: false,\n        error: { message: error.message },\n      }),\n      {\n        status: error.status || 500,\n        headers: headers(request),\n      }\n    )\n  }\n}\n"],"names":["importDirectory","importCar","importBlob","CID","setIn","CBOR","sha256","Response"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMA;AACA;AACA;AACA,MAAM,OAAO,GAAG,CAAC,EAAE,OAAO,EAAE,MAAM;AAClC,EAAE,6BAA6B,EAAE,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG;AAC7D,EAAE,8BAA8B,EAAE,yBAAyB;AAC3D;AACA;AACA,EAAE,8BAA8B;AAChC,IAAI,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,IAAI,EAAE;AACvD,EAAE,cAAc,EAAE,gCAAgC;AAClD,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA,MAAM,YAAY,GAAG,OAAO,OAAO,KAAK;AACxC,EAAE,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,GAAE;AAC/D,EAAE,IAAI,WAAW,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;AACnD,IAAI,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,QAAQ,GAAE;AACzC,IAAI,MAAM,KAAK,0BAA0B,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,EAAC;AAC7D,IAAI,IAAI,KAAK,CAAC,MAAM,KAAK,CAAC,EAAE;AAC5B,MAAM,MAAM,KAAK,CAAC,wBAAwB,CAAC;AAC3C,KAAK;AACL,IAAI,OAAO,MAAMA,wBAAe,CAAC,KAAK,CAAC;AACvC,GAAG,MAAM,IAAI,WAAW,CAAC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;AACtD,IAAI,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,WAAW,GAAE;AAC/C,IAAI,OAAO,MAAMC,kBAAS,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AACnD,GAAG,MAAM;AACT,IAAI,MAAM,OAAO,GAAG,MAAM,OAAO,CAAC,WAAW,GAAE;AAC/C,IAAI,OAAO,MAAMC,mBAAU,CAAC,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;AACpD,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA,MAAM,WAAW,GAAG,OAAO,IAAI,KAAK;AACpC,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,MAAMF,wBAAe,CAAC,CAAC,IAAI,CAAC,EAAC;AAC/C,EAAE,OAAOG,gBAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;AAClC,EAAC;AACD;AACA;AACA;AACA;AACA,MAAM,WAAW,GAAG,OAAO,OAAO,KAAK;AACvC,EAAE,MAAM,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,GAAE;AAC/D,EAAE,IAAI,WAAW,CAAC,QAAQ,CAAC,qBAAqB,CAAC,EAAE;AACnD,IAAI,MAAM,IAAI,GAAG,MAAM,OAAO,CAAC,QAAQ,GAAE;AACzC;AACA,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,wBAAwB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAE;AACrE,IAAI,MAAM,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;AAChD;AACA,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;AAClD,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAC3B,QAAQ,MAAM,IAAI,wBAAwB,OAAO,EAAC;AAClD,QAAQ,MAAM,GAAG,GAAG,MAAM,WAAW,CAAC,IAAI,EAAC;AAC3C,QAAQ,MAAM,IAAI,GAAG,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;AACjD,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,EAAC;AACpC,QAAQC,yBAAK,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC;AAC/B,QAAQA,yBAAK,CAAC,GAAG,EAAE,IAAI,EAAE,GAAG,EAAC;AAC7B,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,QAAQ,GAAG,MAAMF,mBAAU,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;AAC3D;AACA,IAAI,MAAM,KAAK,GAAGG,kBAAI,CAAC,MAAM,CAAC;AAC9B,MAAM,GAAG,GAAG;AACZ,MAAM,eAAe,EAAE,QAAQ,CAAC,GAAG;AACnC,MAAM,IAAI,EAAE,KAAK;AACjB,KAAK,EAAC;AACN,IAAI,MAAM,IAAI,GAAG,MAAMC,WAAM,CAAC,MAAM,CAAC,KAAK,EAAC;AAC3C,IAAI,MAAM,KAAK,GAAGH,gBAAG,CAAC,MAAM,CAAC,CAAC,EAAEE,kBAAI,CAAC,IAAI,EAAE,IAAI,EAAC;AAChD;AACA,IAAI,MAAM,MAAM,GAAG;AACnB,MAAM,EAAE,EAAE,IAAI;AACd,MAAM,KAAK,EAAE;AACb,QAAQ,KAAK,EAAE,KAAK,CAAC,QAAQ,EAAE;AAC/B,QAAQ,GAAG,EAAE,CAAC,OAAO,EAAE,KAAK,CAAC,cAAc,CAAC;AAC5C,QAAQ,IAAI;AACZ,OAAO;AACP,MAAK;AACL;AACA,IAAI,OAAO,MAAM;AACjB,GAAG,MAAM;AACT,IAAI,MAAM,KAAK,CAAC,oCAAoC,CAAC;AACrD,GAAG;AACH,EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAAC,IAAI,GAAG;AACpB,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C,EAAE,KAAK,GAAG,IAAI,GAAG,EAAE;AACnB,MAAM;AACN,EAAE,UAAU,EAAE,KAAK;AACnB,EAAE,KAAK;AACP,CAAC,EAAC;AACF;AACA;AACA;AACA;AACA;AACY,MAAC,MAAM,GAAG,OAAO,OAAO,EAAE,EAAE,KAAK,EAAE,UAAU,EAAE,KAAK;AAChE,EAAE,MAAM,GAAG,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,EAAC;AAClC;AACA,EAAE,MAAM,CAAC,CAAC,EAAE,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAC;AACnD,EAAE,MAAM,IAAI,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAC;AACnD,EAAE,MAAM,GAAG,KAAK,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,GAAE;AAC7D;AACA;AACA,EAAE,IAAI,OAAO,CAAC,MAAM,KAAK,SAAS,EAAE;AACpC,IAAI,OAAO,IAAIE,mBAAQ,CAAC,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC;AAC1D,GAAG;AACH;AACA,EAAE,MAAM,SAAS,GAAG,MAAM;AAC1B;AACA,IAAI,IAAI,KAAK,KAAK,UAAU,EAAE;AAC9B,MAAM,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AACrE,KAAK;AACL,IAAG;AACH;AACA,EAAE,IAAI;AACN,IAAI,QAAQ,CAAC,EAAE,OAAO,CAAC,MAAM,CAAC,EAAE,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;AACvD,MAAM,KAAK,cAAc,EAAE;AAC3B,QAAQ,SAAS,GAAE;AACnB,QAAQ,MAAM,EAAE,GAAG,EAAE,GAAG,MAAM,YAAY,CAAC,OAAO,EAAC;AACnD,QAAQ,MAAM,GAAG,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,EAAC;AACrC,QAAQ,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AAC7B,UAAU,MAAM,OAAO,GAAG,IAAI,IAAI,GAAE;AACpC,UAAU,KAAK,CAAC,GAAG,CAAC,GAAG,EAAE;AACzB,YAAY,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE;AAC/B,YAAY,KAAK,EAAE,EAAE;AACrB,YAAY,GAAG,EAAE;AACjB,cAAc,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE;AACjC,cAAc,MAAM,EAAE,QAAQ;AAC9B,cAAc,OAAO;AACrB,aAAa;AACb,YAAY,OAAO;AACnB,WAAW,EAAC;AACZ,SAAS;AACT,QAAQ,MAAM,MAAM,GAAG,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE,EAAE,GAAE;AACnE;AACA,QAAQ,OAAO,IAAIA,mBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACpD,UAAU,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACnC,SAAS,CAAC;AACV,OAAO;AACP,MAAM,KAAK,aAAa,EAAE;AAC1B,QAAQ,SAAS,GAAE;AACnB,QAAQ,MAAM,MAAM,GAAG,MAAM,WAAW,CAAC,OAAO,EAAC;AACjD,QAAQ,OAAO,IAAIA,mBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACpD,UAAU,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACnC,SAAS,CAAC;AACV,OAAO;AACP,MAAM,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACzC,QAAQ,MAAM,GAAG,GAAGJ,gBAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC;AACjD,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAC;AACvD,QAAQ,IAAI,CAAC,KAAK,EAAE;AACpB,UAAU,MAAM,MAAM,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,CAAC,WAAW,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC;AAC9E,SAAS;AACT,QAAQ,OAAO,IAAII,mBAAQ;AAC3B,UAAU,IAAI,CAAC,SAAS,CAAC;AACzB,YAAY,EAAE,EAAE,IAAI;AACpB,YAAY,KAAK,EAAE;AACnB,cAAc,GAAG,EAAE,GAAG,CAAC,QAAQ,EAAE;AACjC,cAAc,GAAG,EAAE,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,MAAM,EAAE;AAC/C,cAAc,KAAK,EAAE,KAAK,CAAC,KAAK;AAChC,aAAa;AACb,WAAW,CAAC;AACZ,UAAU;AACV,YAAY,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACrC,WAAW;AACX,SAAS;AACT,OAAO;AACP,MAAM,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACnC,QAAQ,SAAS,GAAE;AACnB,QAAQ,MAAM,GAAG,GAAGJ,gBAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC;AACjD,QAAQ,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAC;AAClD,QAAQ,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,GAAG,KAAK;AACtC,YAAY,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;AACtC,YAAY;AACZ,cAAc,GAAG;AACjB,cAAc;AACd,gBAAgB,EAAE,EAAE,KAAK;AACzB,gBAAgB,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,eAAe,EAAE,GAAG,CAAC,UAAU,CAAC,EAAE;AACrE,eAAe;AACf,cAAa;AACb;AACA,QAAQ,OAAO,IAAII,mBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACpD,UAAU,MAAM;AAChB,UAAU,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACnC,SAAS,CAAC;AACV,OAAO;AACP,MAAM,KAAK,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,QAAQ,SAAS,GAAE;AACnB,QAAQ,MAAM,GAAG,GAAGJ,gBAAG,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,EAAE,EAAC;AACjD,QAAQ,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAC;AACvC,QAAQ,OAAO,IAAII,mBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,EAAE,IAAI,EAAE,CAAC,EAAE;AAC1D,UAAU,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACnC,SAAS,CAAC;AACV,OAAO;AACP,MAAM,SAAS;AACf,QAAQ,MAAM,MAAM,GAAG;AACvB,UAAU,EAAE,EAAE,KAAK;AACnB,UAAU,KAAK,EAAE,EAAE,OAAO,EAAE,CAAC,qBAAqB,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,EAAE;AACpE,UAAS;AACT;AACA,QAAQ,OAAO,IAAIA,mBAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE;AACpD,UAAU,MAAM,EAAE,GAAG;AACrB,UAAU,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACnC,SAAS,CAAC;AACV,OAAO;AACP,KAAK;AACL,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,OAAO,IAAIA,mBAAQ;AACvB,MAAM,IAAI,CAAC,SAAS,CAAC;AACrB,QAAQ,EAAE,EAAE,KAAK;AACjB,QAAQ,KAAK,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE;AACzC,OAAO,CAAC;AACR,MAAM;AACN,QAAQ,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,GAAG;AACnC,QAAQ,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC;AACjC,OAAO;AACP,KAAK;AACL,GAAG;AACH;;;;;"}